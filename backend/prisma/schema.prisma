generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  time        String
  location    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PrayerTime {
  id        Int      @id @default(autoincrement())
  name      String
  time      String
  dayOfWeek Int? // 0-6, where 0 is Sunday, nullable for holiday prayers
  isHoliday Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Announcement {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  startDate DateTime
  endDate   DateTime
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  status    String   @default("pending") // pending, read, responded
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MemorialDay {
  id            Int      @id @default(autoincrement())
  hebrewDate    String
  gregorianDate DateTime
  purchasedBy   String
  dedicatedTo   String
  message       String?
  paymentId     String   @unique
  paymentStatus String // pending, completed, failed
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ImageCategory {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  images      Image[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id           Int           @id @default(autoincrement())
  title        String
  description  String?
  url          String
  categoryId   Int
  category     ImageCategory @relation(fields: [categoryId], references: [id])
  displayOrder Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
